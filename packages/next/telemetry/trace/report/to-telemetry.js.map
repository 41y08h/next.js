{"version":3,"sources":["../../../../telemetry/trace/report/to-telemetry.ts"],"names":["TRACE_EVENT_WHITELIST","Map","Object","entries","reportToTelemetry","spanName","duration","eventName","get","telemetry","traceGlobals","record","payload","durationInMicroseconds"],"mappings":";;;;;AAAA;;AAEA,MAAMA,qBAAqB,GAAG,IAAIC,GAAJ,CAC5BC,MAAM,CAACC,OAAP,CAAe;AACb,yBAAuB;AADV,CAAf,CAD4B,CAA9B;;AAMA,MAAMC,iBAAiB,GAAG,CAACC,QAAD,EAAmBC,QAAnB,KAAwC;AAChE,QAAMC,SAAS,GAAGP,qBAAqB,CAACQ,GAAtB,CAA0BH,QAA1B,CAAlB;;AACA,MAAI,CAACE,SAAL,EAAgB;AACd;AACD;;AACD,QAAME,SAAS,GAAGC,qBAAaF,GAAb,CAAiB,WAAjB,CAAlB;;AACA,MAAI,CAACC,SAAL,EAAgB;AACd;AACD;;AAEDA,EAAAA,SAAS,CAACE,MAAV,CAAiB;AACfJ,IAAAA,SADe;AAEfK,IAAAA,OAAO,EAAE;AACPC,MAAAA,sBAAsB,EAAEP;AADjB;AAFM,GAAjB;AAMD,CAhBD;;eAkBeF,iB","sourcesContent":["import { traceGlobals } from '../shared'\r\n\r\nconst TRACE_EVENT_WHITELIST = new Map(\r\n  Object.entries({\r\n    'webpack-invalidated': 'WEBPACK_INVALIDATED',\r\n  })\r\n)\r\n\r\nconst reportToTelemetry = (spanName: string, duration: number) => {\r\n  const eventName = TRACE_EVENT_WHITELIST.get(spanName)\r\n  if (!eventName) {\r\n    return\r\n  }\r\n  const telemetry = traceGlobals.get('telemetry')\r\n  if (!telemetry) {\r\n    return\r\n  }\r\n\r\n  telemetry.record({\r\n    eventName,\r\n    payload: {\r\n      durationInMicroseconds: duration,\r\n    },\r\n  })\r\n}\r\n\r\nexport default reportToTelemetry\r\n"]}