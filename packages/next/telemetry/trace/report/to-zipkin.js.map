{"version":3,"sources":["../../../../telemetry/trace/report/to-zipkin.ts"],"names":["traceId","process","env","TRACE_ID","toString","localEndpoint","serviceName","ipv4","port","zipkinUrl","reportToLocalHost","name","duration","timestamp","id","parentId","attrs","body","tags","method","headers","JSON","stringify","catch"],"mappings":";;;;;AAAA;;AACA;;;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAA1B;;AACA,IAAI,CAACH,OAAL,EAAc;AACZA,EAAAA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,yBAAY,CAAZ,EAAeC,QAAf,CAAwB,KAAxB,CAAjC;AACD;;AAED,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,cADO;AAEpBC,EAAAA,IAAI,EAAE,WAFc;AAGpBC,EAAAA,IAAI,EAAE;AAHc,CAAtB;AAKA,MAAMC,SAAS,GAAI,UAASJ,aAAa,CAACE,IAAK,IAAGF,aAAa,CAACG,IAAK,eAArE;;AAEA,MAAME,iBAAiB,GAAG,CACxBC,IADwB,EAExBC,QAFwB,EAGxBC,SAHwB,EAIxBC,EAJwB,EAKxBC,QALwB,EAMxBC,KANwB,KAOrB;AACH,QAAMC,IAAI,GAAG,CACX;AACEjB,IAAAA,OADF;AAEEe,IAAAA,QAFF;AAGEJ,IAAAA,IAHF;AAIEG,IAAAA,EAJF;AAKED,IAAAA,SALF;AAMED,IAAAA,QANF;AAOEP,IAAAA,aAPF;AAQEa,IAAAA,IAAI,EAAEF;AARR,GADW,CAAb,CADG,CAcH;;AACA,0BAAMP,SAAN,EAAiB;AACfU,IAAAA,MAAM,EAAE,MADO;AAEfC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFM;AAGfH,IAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHS,GAAjB,EAIGM,KAJH,CAIS,MAAM,CAAE,CAJjB;AAKD,CA3BD;;eA6Beb,iB","sourcesContent":["import { randomBytes } from 'crypto'\r\nimport fetch from 'node-fetch'\r\n\r\nlet traceId = process.env.TRACE_ID\r\nif (!traceId) {\r\n  traceId = process.env.TRACE_ID = randomBytes(8).toString('hex')\r\n}\r\n\r\nconst localEndpoint = {\r\n  serviceName: 'zipkin-query',\r\n  ipv4: '127.0.0.1',\r\n  port: 9411,\r\n}\r\nconst zipkinUrl = `http://${localEndpoint.ipv4}:${localEndpoint.port}/api/v2/spans`\r\n\r\nconst reportToLocalHost = (\r\n  name: string,\r\n  duration: number,\r\n  timestamp: number,\r\n  id: string,\r\n  parentId?: string,\r\n  attrs?: Object\r\n) => {\r\n  const body = [\r\n    {\r\n      traceId,\r\n      parentId,\r\n      name,\r\n      id,\r\n      timestamp,\r\n      duration,\r\n      localEndpoint,\r\n      tags: attrs,\r\n    },\r\n  ]\r\n\r\n  // We intentionally do not block on I/O here.\r\n  fetch(zipkinUrl, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(body),\r\n  }).catch(() => {})\r\n}\r\n\r\nexport default reportToLocalHost\r\n"]}