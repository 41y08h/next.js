{"version":3,"sources":["../../../../../build/webpack/plugins/wellknown-errors-plugin/webpackModuleError.ts"],"names":["getFileData","compilation","m","resolved","ctx","compiler","context","resource","res","path","relative","replace","posix","sep","startsWith","requestShortener","readableIdentifier","request","userRequest","content","resolve","getModuleBuildError","input","name","Boolean","module","error","Error","err","sourceFilename","sourceContent","notFoundError","babel","css","scss"],"mappings":"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","sourcesContent":["import { readFileSync } from 'fs'\r\nimport * as path from 'path'\r\nimport { webpack } from 'next/dist/compiled/webpack/webpack'\r\nimport { getBabelError } from './parseBabel'\r\nimport { getCssError } from './parseCss'\r\nimport { getScssError } from './parseScss'\r\nimport { getNotFoundError } from './parseNotFoundError'\r\nimport { SimpleWebpackError } from './simpleWebpackError'\r\n\r\nfunction getFileData(\r\n  compilation: webpack.compilation.Compilation,\r\n  m: any\r\n): [string, string | null] {\r\n  let resolved: string\r\n  let ctx: string | null =\r\n    compilation.compiler?.context ?? compilation.context ?? null\r\n  if (ctx !== null && typeof m.resource === 'string') {\r\n    const res = path.relative(ctx, m.resource).replace(/\\\\/g, path.posix.sep)\r\n    resolved = res.startsWith('.') ? res : `.${path.posix.sep}${res}`\r\n  } else {\r\n    const requestShortener = compilation.requestShortener\r\n    if (typeof m?.readableIdentifier === 'function') {\r\n      resolved = m.readableIdentifier(requestShortener)\r\n    } else {\r\n      resolved = m.request ?? m.userRequest\r\n    }\r\n  }\r\n\r\n  if (resolved) {\r\n    let content: string | null = null\r\n    try {\r\n      content = readFileSync(\r\n        ctx ? path.resolve(ctx, resolved) : resolved,\r\n        'utf8'\r\n      )\r\n    } catch {}\r\n    return [resolved, content]\r\n  }\r\n\r\n  return ['<unknown>', null]\r\n}\r\n\r\nexport async function getModuleBuildError(\r\n  compilation: webpack.compilation.Compilation,\r\n  input: any\r\n): Promise<SimpleWebpackError | false> {\r\n  if (\r\n    !(\r\n      typeof input === 'object' &&\r\n      (input?.name === 'ModuleBuildError' ||\r\n        input?.name === 'ModuleNotFoundError') &&\r\n      Boolean(input.module) &&\r\n      input.error instanceof Error\r\n    )\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  const err: Error = input.error\r\n  const [sourceFilename, sourceContent] = getFileData(compilation, input.module)\r\n\r\n  const notFoundError = await getNotFoundError(\r\n    compilation,\r\n    input,\r\n    sourceFilename\r\n  )\r\n  if (notFoundError !== false) {\r\n    return notFoundError\r\n  }\r\n\r\n  const babel = getBabelError(sourceFilename, err)\r\n  if (babel !== false) {\r\n    return babel\r\n  }\r\n\r\n  const css = getCssError(sourceFilename, err)\r\n  if (css !== false) {\r\n    return css\r\n  }\r\n\r\n  const scss = getScssError(sourceFilename, sourceContent, err)\r\n  if (scss !== false) {\r\n    return scss\r\n  }\r\n\r\n  return false\r\n}\r\n"]}