{"version":3,"sources":["../../../build/webpack/require-hook.ts"],"names":["hookPropertyMap","mod","_resolveFilename"],"mappings":"cAAA;AACA;AACA;;AAEA,MAAMA,eAAe,GAAG,IAAxB,GAAwB,C,CAiDxB,CAAA,SAAA,EAAA,wCAAA,C,6DACA,CAAA,sBAAA,EAAA,oCAAA,C,qEACIE,CAAJD,wBAAIC,EAAAA,wCAAAA,C,EAMF,CAAA,wCAAA,EAAA,kDAAA,C,irCAzDF,W,GAAwB,CAAxB","sourcesContent":["// sync injects a hook for webpack and webpack/... requires to use the internal ncc webpack version\r\n// this is in order for userland plugins to attach to the same webpack instance as next.js\r\n// the individual compiled modules are as defined for the compilation in bundles/webpack/packages/*\r\n\r\nconst hookPropertyMap = new Map(\r\n  [\r\n    ['webpack', 'next/dist/compiled/webpack/webpack-lib'],\r\n    ['webpack/package', 'next/dist/compiled/webpack/package'],\r\n    ['webpack/package.json', 'next/dist/compiled/webpack/package'],\r\n    ['webpack/lib/webpack', 'next/dist/compiled/webpack/webpack-lib'],\r\n    ['webpack/lib/webpack.js', 'next/dist/compiled/webpack/webpack-lib'],\r\n    [\r\n      'webpack/lib/node/NodeEnvironmentPlugin',\r\n      'next/dist/compiled/webpack/NodeEnvironmentPlugin',\r\n    ],\r\n    [\r\n      'webpack/lib/node/NodeEnvironmentPlugin.js',\r\n      'next/dist/compiled/webpack/NodeEnvironmentPlugin',\r\n    ],\r\n    [\r\n      'webpack/lib/BasicEvaluatedExpression',\r\n      'next/dist/compiled/webpack/BasicEvaluatedExpression',\r\n    ],\r\n    [\r\n      'webpack/lib/BasicEvaluatedExpression.js',\r\n      'next/dist/compiled/webpack/BasicEvaluatedExpression',\r\n    ],\r\n    [\r\n      'webpack/lib/node/NodeTargetPlugin',\r\n      'next/dist/compiled/webpack/NodeTargetPlugin',\r\n    ],\r\n    [\r\n      'webpack/lib/node/NodeTargetPlugin.js',\r\n      'next/dist/compiled/webpack/NodeTargetPlugin',\r\n    ],\r\n    [\r\n      'webpack/lib/ModuleFilenameHelpers',\r\n      'next/dist/compiled/webpack/ModuleFilenameHelpers',\r\n    ],\r\n    [\r\n      'webpack/lib/ModuleFilenameHelpers.js',\r\n      'next/dist/compiled/webpack/ModuleFilenameHelpers',\r\n    ],\r\n    ['webpack/lib/GraphHelpers', 'next/dist/compiled/webpack/GraphHelpers'],\r\n    ['webpack/lib/GraphHelpers.js', 'next/dist/compiled/webpack/GraphHelpers'],\r\n    ['webpack/lib/NormalModule', 'next/dist/compiled/webpack/NormalModule'],\r\n    ['webpack-sources', 'next/dist/compiled/webpack/sources'],\r\n    ['webpack-sources/lib', 'next/dist/compiled/webpack/sources'],\r\n    ['webpack-sources/lib/index', 'next/dist/compiled/webpack/sources'],\r\n    ['webpack-sources/lib/index.js', 'next/dist/compiled/webpack/sources'],\r\n  ].map(([request, replacement]) => [request, require.resolve(replacement)])\r\n)\r\n\r\nconst mod = require('module')\r\nconst resolveFilename = mod._resolveFilename\r\nmod._resolveFilename = function (\r\n  request: string,\r\n  parent: any,\r\n  isMain: boolean,\r\n  options: any\r\n) {\r\n  const hookResolved = hookPropertyMap.get(request)\r\n  if (hookResolved) request = hookResolved\r\n  return resolveFilename.call(mod, request, parent, isMain, options)\r\n}\r\n"]}