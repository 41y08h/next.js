{"version":3,"sources":["../../client/with-router.tsx"],"names":["WithRouterWrapper"],"mappings":";;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;;;;;AAWe;;AAOX,SAAA,UAAA,CAAA,iBAAA,EAAO;AAAmB,WAAA,iBAAA,CAAA,KAAA,EAAQ;AAA3B,WAAP,aAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,iBAAA,E,cAGFA;AAAAA,MAAAA,MAAAA,EAAAA,CAAAA,GAAAA,OAAAA,CAAAA,SAAAA;AAAAA,K,EAHE,K,CAAA,CAAO;AASPA;;wDATO,e,CAAA,C;;AAYT,EAAA,iBAAOA,CAAP,mBAAA,GAAA,iBAAA,CAAA,mBAAA","sourcesContent":["import React from 'react'\r\nimport { NextComponentType, NextPageContext } from '../next-server/lib/utils'\r\nimport { NextRouter, useRouter } from './router'\r\n\r\nexport type WithRouterProps = {\r\n  router: NextRouter\r\n}\r\n\r\nexport type ExcludeRouterProps<P> = Pick<\r\n  P,\r\n  Exclude<keyof P, keyof WithRouterProps>\r\n>\r\n\r\nexport default function withRouter<\r\n  P extends WithRouterProps,\r\n  C = NextPageContext\r\n>(\r\n  ComposedComponent: NextComponentType<C, any, P>\r\n): React.ComponentType<ExcludeRouterProps<P>> {\r\n  function WithRouterWrapper(props: any): JSX.Element {\r\n    return <ComposedComponent router={useRouter()} {...props} />\r\n  }\r\n\r\n  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps\r\n  // This is needed to allow checking for custom getInitialProps in _app\r\n  ;(WithRouterWrapper as any).origGetInitialProps = (ComposedComponent as any).origGetInitialProps\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const name =\r\n      ComposedComponent.displayName || ComposedComponent.name || 'Unknown'\r\n    WithRouterWrapper.displayName = `withRouter(${name})`\r\n  }\r\n\r\n  return WithRouterWrapper\r\n}\r\n"]}