{"version":3,"sources":["../../export/index.ts"],"names":["exists","existsOrig","divideSegments","number","segments","result","dividedNumber","Math","floor","push","createProgress","total","label","Error","currentSegmentTotal","shift","currentSegmentCount","curProgress","progressSpinner","spinner","frames","interval","newText","text","console","log","stop","exportApp","dir","options","configuration","nextExportSpan","traceAsyncFn","traceChild","traceFn","Log","nextConfig","PHASE_EXPORT","threads","experimental","cpus","distDir","telemetry","buildExport","Telemetry","record","webpackVersion","cliCommand","isSrcDir","hasNowJson","cwd","isCustomServer","subFolders","trailingSlash","isLikeServerless","target","silent","info","buildIdFile","BUILD_ID_FILE","customRoutesDetected","filter","config","hasNextSupport","length","warn","join","buildId","pagesManifest","pages","require","SERVERLESS_DIRECTORY","SERVER_DIRECTORY","PAGES_MANIFEST","prerenderManifest","undefined","PRERENDER_MANIFEST","_","excludedPrerenderRoutes","Set","Object","keys","defaultPathMap","hasApiRoutes","page","match","API_ROUTE","dynamicRoutes","add","outDir","outdir","promises","mkdir","recursive","EXPORT_DETAIL","JSON","stringify","version","outDirectory","success","CLIENT_STATIC_FILES_PATH","exportPathMap","CONFIG_FILE","defaultMap","i18n","images","loader","isNextImageImported","readFile","EXPORT_MARKER","then","parse","catch","renderOpts","nextExport","assetPrefix","replace","dev","hotReloader","basePath","canonicalBase","amp","ampValidatorPath","validator","ampSkipValidation","skipValidation","ampOptimizerConfig","optimizer","locales","locale","defaultLocale","domainLocales","domains","disableOptimizedLoading","serverRuntimeConfig","publicRuntimeConfig","runtimeConfig","global","__NEXT_DATA__","exportPaths","map","path","filteredPaths","route","fallbackEnabledPages","key","has","fallback","size","SSG_FALLBACK_EXPORT_ERROR","chalk","yellow","bold","progress","prefixes","statusMessage","pagesDataDir","ampValidations","hadValidationError","publicDir","CLIENT_PUBLIC_FILES_PATH","worker","Worker","resolve","maxRetries","numWorkers","enableWorkerThreads","workerThreads","exposedMethods","getStdout","pipe","process","stdout","getStderr","stderr","renderError","errorPaths","Promise","all","pageExportSpan","setAttribute","default","pathMap","serverless","optimizeFonts","optimizeImages","optimizeCss","parentSpanId","id","validation","ampValidationResult","Array","isArray","errors","error","fromBuildExportRevalidate","initialPageRevalidationMap","ssgNotFound","ssgNotFoundPaths","end","routes","srcRoute","pageName","pagePath","distPagesDir","substr","split","orig","htmlDest","sep","ampHtmlDest","jsonDest","copyFile","sort","flush"],"mappings":"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","sourcesContent":["import chalk from 'chalk'\r\nimport findUp from 'next/dist/compiled/find-up'\r\nimport {\r\n  promises,\r\n  existsSync,\r\n  exists as existsOrig,\r\n  readFileSync,\r\n  writeFileSync,\r\n} from 'fs'\r\nimport { Worker } from 'jest-worker'\r\nimport { dirname, join, resolve, sep } from 'path'\r\nimport { promisify } from 'util'\r\nimport { AmpPageStatus, formatAmpMessages } from '../build/output/index'\r\nimport * as Log from '../build/output/log'\r\nimport createSpinner from '../build/spinner'\r\nimport { API_ROUTE, SSG_FALLBACK_EXPORT_ERROR } from '../lib/constants'\r\nimport { recursiveCopy } from '../lib/recursive-copy'\r\nimport { recursiveDelete } from '../lib/recursive-delete'\r\nimport {\r\n  BUILD_ID_FILE,\r\n  CLIENT_PUBLIC_FILES_PATH,\r\n  CLIENT_STATIC_FILES_PATH,\r\n  CONFIG_FILE,\r\n  EXPORT_DETAIL,\r\n  EXPORT_MARKER,\r\n  PAGES_MANIFEST,\r\n  PHASE_EXPORT,\r\n  PRERENDER_MANIFEST,\r\n  SERVERLESS_DIRECTORY,\r\n  SERVER_DIRECTORY,\r\n} from '../next-server/lib/constants'\r\nimport loadConfig, {\r\n  isTargetLikeServerless,\r\n  NextConfig,\r\n} from '../next-server/server/config'\r\nimport { eventCliSession } from '../telemetry/events'\r\nimport { hasNextSupport } from '../telemetry/ci-info'\r\nimport { Telemetry } from '../telemetry/storage'\r\nimport {\r\n  normalizePagePath,\r\n  denormalizePagePath,\r\n} from '../next-server/server/normalize-page-path'\r\nimport { loadEnvConfig } from '@next/env'\r\nimport { PrerenderManifest } from '../build'\r\nimport exportPage from './worker'\r\nimport { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\r\nimport { getPagePath } from '../next-server/server/require'\r\nimport { trace } from '../telemetry/trace'\r\n\r\nconst exists = promisify(existsOrig)\r\n\r\nfunction divideSegments(number: number, segments: number): number[] {\r\n  const result = []\r\n  while (number > 0 && segments > 0) {\r\n    const dividedNumber =\r\n      number < segments ? number : Math.floor(number / segments)\r\n\r\n    number -= dividedNumber\r\n    segments--\r\n    result.push(dividedNumber)\r\n  }\r\n  return result\r\n}\r\n\r\nconst createProgress = (total: number, label: string) => {\r\n  const segments = divideSegments(total, 4)\r\n\r\n  if (total === 0) {\r\n    throw new Error('invariant: progress total can not be zero')\r\n  }\r\n  let currentSegmentTotal = segments.shift()\r\n  let currentSegmentCount = 0\r\n  let curProgress = 0\r\n  let progressSpinner = createSpinner(`${label} (${curProgress}/${total})`, {\r\n    spinner: {\r\n      frames: [\r\n        '[    ]',\r\n        '[=   ]',\r\n        '[==  ]',\r\n        '[=== ]',\r\n        '[ ===]',\r\n        '[  ==]',\r\n        '[   =]',\r\n        '[    ]',\r\n        '[   =]',\r\n        '[  ==]',\r\n        '[ ===]',\r\n        '[====]',\r\n        '[=== ]',\r\n        '[==  ]',\r\n        '[=   ]',\r\n      ],\r\n      interval: 80,\r\n    },\r\n  })\r\n\r\n  return () => {\r\n    curProgress++\r\n    currentSegmentCount++\r\n\r\n    // Make sure we only log once per fully generated segment\r\n    if (currentSegmentCount !== currentSegmentTotal) {\r\n      return\r\n    }\r\n\r\n    currentSegmentTotal = segments.shift()\r\n    currentSegmentCount = 0\r\n\r\n    const newText = `${label} (${curProgress}/${total})`\r\n    if (progressSpinner) {\r\n      progressSpinner.text = newText\r\n    } else {\r\n      console.log(newText)\r\n    }\r\n\r\n    if (curProgress === total && progressSpinner) {\r\n      progressSpinner.stop()\r\n      console.log(newText)\r\n    }\r\n  }\r\n}\r\n\r\ntype ExportPathMap = {\r\n  [page: string]: { page: string; query?: { [key: string]: string } }\r\n}\r\n\r\ninterface ExportOptions {\r\n  outdir: string\r\n  silent?: boolean\r\n  threads?: number\r\n  pages?: string[]\r\n  buildExport?: boolean\r\n  statusMessage?: string\r\n}\r\n\r\nexport default async function exportApp(\r\n  dir: string,\r\n  options: ExportOptions,\r\n  configuration?: NextConfig\r\n): Promise<void> {\r\n  const nextExportSpan = trace('next-export')\r\n\r\n  return nextExportSpan.traceAsyncFn(async () => {\r\n    dir = resolve(dir)\r\n\r\n    // attempt to load global env values so they are available in next.config.js\r\n    nextExportSpan\r\n      .traceChild('load-dotenv')\r\n      .traceFn(() => loadEnvConfig(dir, false, Log))\r\n\r\n    const nextConfig =\r\n      configuration ||\r\n      (await nextExportSpan\r\n        .traceChild('load-next-config')\r\n        .traceAsyncFn(() => loadConfig(PHASE_EXPORT, dir)))\r\n    const threads = options.threads || nextConfig.experimental.cpus\r\n    const distDir = join(dir, nextConfig.distDir)\r\n\r\n    const telemetry = options.buildExport ? null : new Telemetry({ distDir })\r\n\r\n    if (telemetry) {\r\n      telemetry.record(\r\n        eventCliSession(PHASE_EXPORT, distDir, {\r\n          webpackVersion: null,\r\n          cliCommand: 'export',\r\n          isSrcDir: null,\r\n          hasNowJson: !!(await findUp('now.json', { cwd: dir })),\r\n          isCustomServer: null,\r\n        })\r\n      )\r\n    }\r\n\r\n    const subFolders = nextConfig.trailingSlash && !options.buildExport\r\n    const isLikeServerless = nextConfig.target !== 'server'\r\n\r\n    if (!options.silent && !options.buildExport) {\r\n      Log.info(`using build directory: ${distDir}`)\r\n    }\r\n\r\n    const buildIdFile = join(distDir, BUILD_ID_FILE)\r\n\r\n    if (!existsSync(buildIdFile)) {\r\n      throw new Error(\r\n        `Could not find a production build in the '${distDir}' directory. Try building your app with 'next build' before starting the static export. https://nextjs.org/docs/messages/next-export-no-build-id`\r\n      )\r\n    }\r\n\r\n    const customRoutesDetected = ['rewrites', 'redirects', 'headers'].filter(\r\n      (config) => typeof nextConfig[config] === 'function'\r\n    )\r\n\r\n    if (\r\n      !hasNextSupport &&\r\n      !options.buildExport &&\r\n      customRoutesDetected.length > 0\r\n    ) {\r\n      Log.warn(\r\n        `rewrites, redirects, and headers are not applied when exporting your application, detected (${customRoutesDetected.join(\r\n          ', '\r\n        )}). See more info here: https://nextjs.org/docs/messages/export-no-custom-routes`\r\n      )\r\n    }\r\n\r\n    const buildId = readFileSync(buildIdFile, 'utf8')\r\n    const pagesManifest =\r\n      !options.pages &&\r\n      (require(join(\r\n        distDir,\r\n        isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\r\n        PAGES_MANIFEST\r\n      )) as PagesManifest)\r\n\r\n    let prerenderManifest: PrerenderManifest | undefined = undefined\r\n    try {\r\n      prerenderManifest = require(join(distDir, PRERENDER_MANIFEST))\r\n    } catch (_) {}\r\n\r\n    const excludedPrerenderRoutes = new Set<string>()\r\n    const pages = options.pages || Object.keys(pagesManifest)\r\n    const defaultPathMap: ExportPathMap = {}\r\n    let hasApiRoutes = false\r\n\r\n    for (const page of pages) {\r\n      // _document and _app are not real pages\r\n      // _error is exported as 404.html later on\r\n      // API Routes are Node.js functions\r\n\r\n      if (page.match(API_ROUTE)) {\r\n        hasApiRoutes = true\r\n        continue\r\n      }\r\n\r\n      if (page === '/_document' || page === '/_app' || page === '/_error') {\r\n        continue\r\n      }\r\n\r\n      // iSSG pages that are dynamic should not export templated version by\r\n      // default. In most cases, this would never work. There is no server that\r\n      // could run `getStaticProps`. If users make their page work lazily, they\r\n      // can manually add it to the `exportPathMap`.\r\n      if (prerenderManifest?.dynamicRoutes[page]) {\r\n        excludedPrerenderRoutes.add(page)\r\n        continue\r\n      }\r\n\r\n      defaultPathMap[page] = { page }\r\n    }\r\n\r\n    // Initialize the output directory\r\n    const outDir = options.outdir\r\n\r\n    if (outDir === join(dir, 'public')) {\r\n      throw new Error(\r\n        `The 'public' directory is reserved in Next.js and can not be used as the export out directory. https://nextjs.org/docs/messages/can-not-output-to-public`\r\n      )\r\n    }\r\n\r\n    if (outDir === join(dir, 'static')) {\r\n      throw new Error(\r\n        `The 'static' directory is reserved in Next.js and can not be used as the export out directory. https://nextjs.org/docs/messages/can-not-output-to-static`\r\n      )\r\n    }\r\n\r\n    await recursiveDelete(join(outDir))\r\n    await promises.mkdir(join(outDir, '_next', buildId), { recursive: true })\r\n\r\n    writeFileSync(\r\n      join(distDir, EXPORT_DETAIL),\r\n      JSON.stringify({\r\n        version: 1,\r\n        outDirectory: outDir,\r\n        success: false,\r\n      }),\r\n      'utf8'\r\n    )\r\n\r\n    // Copy static directory\r\n    if (!options.buildExport && existsSync(join(dir, 'static'))) {\r\n      if (!options.silent) {\r\n        Log.info('Copying \"static\" directory')\r\n      }\r\n      await nextExportSpan\r\n        .traceChild('copy-static-directory')\r\n        .traceAsyncFn(() =>\r\n          recursiveCopy(join(dir, 'static'), join(outDir, 'static'))\r\n        )\r\n    }\r\n\r\n    // Copy .next/static directory\r\n    if (\r\n      !options.buildExport &&\r\n      existsSync(join(distDir, CLIENT_STATIC_FILES_PATH))\r\n    ) {\r\n      if (!options.silent) {\r\n        Log.info('Copying \"static build\" directory')\r\n      }\r\n      await nextExportSpan\r\n        .traceChild('copy-next-static-directory')\r\n        .traceAsyncFn(() =>\r\n          recursiveCopy(\r\n            join(distDir, CLIENT_STATIC_FILES_PATH),\r\n            join(outDir, '_next', CLIENT_STATIC_FILES_PATH)\r\n          )\r\n        )\r\n    }\r\n\r\n    // Get the exportPathMap from the config file\r\n    if (typeof nextConfig.exportPathMap !== 'function') {\r\n      if (!options.silent) {\r\n        Log.info(\r\n          `No \"exportPathMap\" found in \"${CONFIG_FILE}\". Generating map from \"./pages\"`\r\n        )\r\n      }\r\n      nextConfig.exportPathMap = async (defaultMap: ExportPathMap) => {\r\n        return defaultMap\r\n      }\r\n    }\r\n\r\n    const {\r\n      i18n,\r\n      images: { loader = 'default' },\r\n    } = nextConfig\r\n\r\n    if (i18n && !options.buildExport) {\r\n      throw new Error(\r\n        `i18n support is not compatible with next export. See here for more info on deploying: https://nextjs.org/docs/deployment`\r\n      )\r\n    }\r\n\r\n    if (!options.buildExport) {\r\n      const { isNextImageImported } = await nextExportSpan\r\n        .traceChild('is-next-image-imported')\r\n        .traceAsyncFn(() =>\r\n          promises\r\n            .readFile(join(distDir, EXPORT_MARKER), 'utf8')\r\n            .then((text) => JSON.parse(text))\r\n            .catch(() => ({}))\r\n        )\r\n\r\n      if (isNextImageImported && loader === 'default' && !hasNextSupport) {\r\n        throw new Error(\r\n          `Image Optimization using Next.js' default loader is not compatible with \\`next export\\`.\r\n  Possible solutions:\r\n    - Use \\`next start\\` to run a server, which includes the Image Optimization API.\r\n    - Use any provider which supports Image Optimization (like Vercel).\r\n    - Configure a third-party loader in \\`next.config.js\\`.\r\n    - Use the \\`loader\\` prop for \\`next/image\\`.\r\n  Read more: https://nextjs.org/docs/messages/export-image-api`\r\n        )\r\n      }\r\n    }\r\n\r\n    // Start the rendering process\r\n    const renderOpts = {\r\n      dir,\r\n      buildId,\r\n      nextExport: true,\r\n      assetPrefix: nextConfig.assetPrefix.replace(/\\/$/, ''),\r\n      distDir,\r\n      dev: false,\r\n      hotReloader: null,\r\n      basePath: nextConfig.basePath,\r\n      canonicalBase: nextConfig.amp?.canonicalBase || '',\r\n      ampValidatorPath: nextConfig.experimental.amp?.validator || undefined,\r\n      ampSkipValidation: nextConfig.experimental.amp?.skipValidation || false,\r\n      ampOptimizerConfig: nextConfig.experimental.amp?.optimizer || undefined,\r\n      locales: i18n?.locales,\r\n      locale: i18n?.defaultLocale,\r\n      defaultLocale: i18n?.defaultLocale,\r\n      domainLocales: i18n?.domains,\r\n      trailingSlash: nextConfig.trailingSlash,\r\n      disableOptimizedLoading: nextConfig.experimental.disableOptimizedLoading,\r\n    }\r\n\r\n    const { serverRuntimeConfig, publicRuntimeConfig } = nextConfig\r\n\r\n    if (Object.keys(publicRuntimeConfig).length > 0) {\r\n      ;(renderOpts as any).runtimeConfig = publicRuntimeConfig\r\n    }\r\n\r\n    // We need this for server rendering the Link component.\r\n    ;(global as any).__NEXT_DATA__ = {\r\n      nextExport: true,\r\n    }\r\n\r\n    if (!options.silent && !options.buildExport) {\r\n      Log.info(`Launching ${threads} workers`)\r\n    }\r\n    const exportPathMap = await nextExportSpan\r\n      .traceChild('run-export-path-map')\r\n      .traceAsyncFn(() =>\r\n        nextConfig.exportPathMap(defaultPathMap, {\r\n          dev: false,\r\n          dir,\r\n          outDir,\r\n          distDir,\r\n          buildId,\r\n        })\r\n      )\r\n\r\n    if (\r\n      !options.buildExport &&\r\n      !exportPathMap['/404'] &&\r\n      !exportPathMap['/404.html']\r\n    ) {\r\n      exportPathMap['/404'] = exportPathMap['/404.html'] = {\r\n        page: '/_error',\r\n      }\r\n    }\r\n\r\n    // make sure to prevent duplicates\r\n    const exportPaths = [\r\n      ...new Set(\r\n        Object.keys(exportPathMap).map((path) =>\r\n          denormalizePagePath(normalizePagePath(path))\r\n        )\r\n      ),\r\n    ]\r\n\r\n    const filteredPaths = exportPaths.filter(\r\n      // Remove API routes\r\n      (route) => !exportPathMap[route].page.match(API_ROUTE)\r\n    )\r\n\r\n    if (filteredPaths.length !== exportPaths.length) {\r\n      hasApiRoutes = true\r\n    }\r\n\r\n    if (filteredPaths.length === 0) {\r\n      return\r\n    }\r\n\r\n    if (prerenderManifest && !options.buildExport) {\r\n      const fallbackEnabledPages = new Set()\r\n\r\n      for (const key of Object.keys(prerenderManifest.dynamicRoutes)) {\r\n        // only error if page is included in path map\r\n        if (!exportPathMap[key] && !excludedPrerenderRoutes.has(key)) {\r\n          continue\r\n        }\r\n\r\n        if (prerenderManifest.dynamicRoutes[key].fallback !== false) {\r\n          fallbackEnabledPages.add(key)\r\n        }\r\n      }\r\n\r\n      if (fallbackEnabledPages.size) {\r\n        throw new Error(\r\n          `Found pages with \\`fallback\\` enabled:\\n${[\r\n            ...fallbackEnabledPages,\r\n          ].join('\\n')}\\n${SSG_FALLBACK_EXPORT_ERROR}\\n`\r\n        )\r\n      }\r\n    }\r\n\r\n    // Warn if the user defines a path for an API page\r\n    if (hasApiRoutes) {\r\n      if (!options.silent) {\r\n        Log.warn(\r\n          chalk.yellow(\r\n            `Statically exporting a Next.js application via \\`next export\\` disables API routes.`\r\n          ) +\r\n            `\\n` +\r\n            chalk.yellow(\r\n              `This command is meant for static-only hosts, and is` +\r\n                ' ' +\r\n                chalk.bold(`not necessary to make your application static.`)\r\n            ) +\r\n            `\\n` +\r\n            chalk.yellow(\r\n              `Pages in your application without server-side data dependencies will be automatically statically exported by \\`next build\\`, including pages powered by \\`getStaticProps\\`.`\r\n            ) +\r\n            `\\n` +\r\n            chalk.yellow(\r\n              `Learn more: https://nextjs.org/docs/messages/api-routes-static-export`\r\n            )\r\n        )\r\n      }\r\n    }\r\n\r\n    const progress =\r\n      !options.silent &&\r\n      createProgress(\r\n        filteredPaths.length,\r\n        `${Log.prefixes.info} ${options.statusMessage || 'Exporting'}`\r\n      )\r\n    const pagesDataDir = options.buildExport\r\n      ? outDir\r\n      : join(outDir, '_next/data', buildId)\r\n\r\n    const ampValidations: AmpPageStatus = {}\r\n    let hadValidationError = false\r\n\r\n    const publicDir = join(dir, CLIENT_PUBLIC_FILES_PATH)\r\n    // Copy public directory\r\n    if (!options.buildExport && existsSync(publicDir)) {\r\n      if (!options.silent) {\r\n        Log.info('Copying \"public\" directory')\r\n      }\r\n      await nextExportSpan\r\n        .traceChild('copy-public-directory')\r\n        .traceAsyncFn(() =>\r\n          recursiveCopy(publicDir, outDir, {\r\n            filter(path) {\r\n              // Exclude paths used by pages\r\n              return !exportPathMap[path]\r\n            },\r\n          })\r\n        )\r\n    }\r\n\r\n    const worker = new Worker(require.resolve('./worker'), {\r\n      maxRetries: 0,\r\n      numWorkers: threads,\r\n      enableWorkerThreads: nextConfig.experimental.workerThreads,\r\n      exposedMethods: ['default'],\r\n    }) as Worker & { default: typeof exportPage }\r\n\r\n    worker.getStdout().pipe(process.stdout)\r\n    worker.getStderr().pipe(process.stderr)\r\n\r\n    let renderError = false\r\n    const errorPaths: string[] = []\r\n\r\n    await Promise.all(\r\n      filteredPaths.map(async (path) => {\r\n        const pageExportSpan = nextExportSpan.traceChild('export-page')\r\n        pageExportSpan.setAttribute('path', path)\r\n\r\n        return pageExportSpan.traceAsyncFn(async () => {\r\n          const result = await worker.default({\r\n            path,\r\n            pathMap: exportPathMap[path],\r\n            distDir,\r\n            outDir,\r\n            pagesDataDir,\r\n            renderOpts,\r\n            serverRuntimeConfig,\r\n            subFolders,\r\n            buildExport: options.buildExport,\r\n            serverless: isTargetLikeServerless(nextConfig.target),\r\n            optimizeFonts: nextConfig.optimizeFonts,\r\n            optimizeImages: nextConfig.experimental.optimizeImages,\r\n            optimizeCss: nextConfig.experimental.optimizeCss,\r\n            disableOptimizedLoading:\r\n              nextConfig.experimental.disableOptimizedLoading,\r\n            parentSpanId: pageExportSpan.id,\r\n          })\r\n\r\n          for (const validation of result.ampValidations || []) {\r\n            const { page, result: ampValidationResult } = validation\r\n            ampValidations[page] = ampValidationResult\r\n            hadValidationError =\r\n              hadValidationError ||\r\n              (Array.isArray(ampValidationResult?.errors) &&\r\n                ampValidationResult.errors.length > 0)\r\n          }\r\n          renderError = renderError || !!result.error\r\n          if (!!result.error) errorPaths.push(path)\r\n\r\n          if (options.buildExport && configuration) {\r\n            if (typeof result.fromBuildExportRevalidate !== 'undefined') {\r\n              configuration.initialPageRevalidationMap[path] =\r\n                result.fromBuildExportRevalidate\r\n            }\r\n\r\n            if (result.ssgNotFound === true) {\r\n              configuration.ssgNotFoundPaths.push(path)\r\n            }\r\n          }\r\n\r\n          if (progress) progress()\r\n        })\r\n      })\r\n    )\r\n\r\n    worker.end()\r\n\r\n    // copy prerendered routes to outDir\r\n    if (!options.buildExport && prerenderManifest) {\r\n      await Promise.all(\r\n        Object.keys(prerenderManifest.routes).map(async (route) => {\r\n          const { srcRoute } = prerenderManifest!.routes[route]\r\n          const pageName = srcRoute || route\r\n          const pagePath = getPagePath(pageName, distDir, isLikeServerless)\r\n          const distPagesDir = join(\r\n            pagePath,\r\n            // strip leading / and then recurse number of nested dirs\r\n            // to place from base folder\r\n            pageName\r\n              .substr(1)\r\n              .split('/')\r\n              .map(() => '..')\r\n              .join('/')\r\n          )\r\n          route = normalizePagePath(route)\r\n\r\n          const orig = join(distPagesDir, route)\r\n          const htmlDest = join(\r\n            outDir,\r\n            `${route}${\r\n              subFolders && route !== '/index' ? `${sep}index` : ''\r\n            }.html`\r\n          )\r\n          const ampHtmlDest = join(\r\n            outDir,\r\n            `${route}.amp${subFolders ? `${sep}index` : ''}.html`\r\n          )\r\n          const jsonDest = join(pagesDataDir, `${route}.json`)\r\n\r\n          await promises.mkdir(dirname(htmlDest), { recursive: true })\r\n          await promises.mkdir(dirname(jsonDest), { recursive: true })\r\n          await promises.copyFile(`${orig}.html`, htmlDest)\r\n          await promises.copyFile(`${orig}.json`, jsonDest)\r\n\r\n          if (await exists(`${orig}.amp.html`)) {\r\n            await promises.mkdir(dirname(ampHtmlDest), { recursive: true })\r\n            await promises.copyFile(`${orig}.amp.html`, ampHtmlDest)\r\n          }\r\n        })\r\n      )\r\n    }\r\n\r\n    if (Object.keys(ampValidations).length) {\r\n      console.log(formatAmpMessages(ampValidations))\r\n    }\r\n    if (hadValidationError) {\r\n      throw new Error(\r\n        `AMP Validation caused the export to fail. https://nextjs.org/docs/messages/amp-export-validation`\r\n      )\r\n    }\r\n\r\n    if (renderError) {\r\n      throw new Error(\r\n        `Export encountered errors on following paths:\\n\\t${errorPaths\r\n          .sort()\r\n          .join('\\n\\t')}`\r\n      )\r\n    }\r\n\r\n    writeFileSync(\r\n      join(distDir, EXPORT_DETAIL),\r\n      JSON.stringify({\r\n        version: 1,\r\n        outDirectory: outDir,\r\n        success: true,\r\n      }),\r\n      'utf8'\r\n    )\r\n\r\n    if (telemetry) {\r\n      await telemetry.flush()\r\n    }\r\n  })\r\n}\r\n"]}